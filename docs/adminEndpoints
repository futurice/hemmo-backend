All of these endpoints require employee authorization jwt
-----------------------------------------------------------------
PUT /session/{sessionId} - Implemented

Update session.

payload
{
  employeeId: (Integer, optional) id of employee who will be assigned,
  reviewed: (Boolean, optional)
}

returns status code (200, 400) representing the outcome.
-----------------------------------------------------------------
GET /employees/{employeeId} - Implemented

Get data about an employee.

returns
{
  name: (String), employee name (?)
  email: (String), employee email
}

-----------------------------------------------------------------
GET /users/{userId} - Implemented

Fetch data about user, including sessions

returns
{
  name: (String), user's name
  sessions: (Array), list of dictionaries containing (startedAt, reviewed)
}

-----------------------------------------------------------------
GET /sessions/{sessionId}

Fetch data about a session

returns
{
  sessionId,
  assigneeId,
  user: {
    userId,
    name
  }
  reviewed,
  startedAt,
  content (List), dictionary in this form
  {
    contentId,
    question,
    contentType,
    createdAt
  }
}

-----------------------------------------------------------------
GET /attachment/{contentId} - Implemented

Fetch attachment with contentId

returns the file or 404
-----------------------------------------------------------------
