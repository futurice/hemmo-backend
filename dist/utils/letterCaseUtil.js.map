{"version":3,"sources":["../../src/utils/letterCaseUtil.js"],"names":[],"mappings":"AAAA;;AAEA,MAAM,IAAI,QAAQ,QAAR,CAAV;AACA,MAAM,WAAW,QAAQ,4BAAR,CAAjB;AACA,MAAM,cAAc,QAAQ,+BAAR,CAApB;;AAEA,SAAS,aAAT,CAAuB,EAAvB,EAA2B;AACzB,SAAO,SAAS,SAAT,CAAmB,KAAnB,EAA0B;AAC/B,WAAO,EAAE,MAAF,CAAS,KAAT,EAAgB,CAAC,MAAD,EAAS,GAAT,EAAc,GAAd,KAAsB;AAC3C,aAAO,GAAG,GAAH,CAAP,IAAkB,GAAlB;AACA,aAAO,MAAP;AACD,KAHM,EAGJ,EAHI,CAAP;AAID,GALD;AAMD;;;;;;;;AAQD,QAAQ,SAAR,GAAoB,cAAc,EAAE,OAAF,CAAU,QAAV,CAAd,CAApB;AACA,QAAQ,cAAR,GAAyB,cAAc,EAAE,OAAF,CAAU,WAAV,CAAd,CAAzB","file":"letterCaseUtil.js","sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst camelize = require('underscore.string/camelize');\nconst underscored = require('underscore.string/underscored');\n\nfunction transformKeys(fn) {\n  return function transform(attrs) {\n    return _.reduce(attrs, (result, val, key) => {\n      result[fn(key)] = val;\n      return result;\n    }, {});\n  };\n}\n\n// @NOTE the string manipulation functions are memoized here to\n// reduce cpu load. The intended use case of converting database\n// model fields, the functions will be called with a small\n// set of often repeating strings, which should lead to high cache\n// utilization for the memo\n\nexports.camelKeys = transformKeys(_.memoize(camelize));\nexports.underscoreKeys = transformKeys(_.memoize(underscored));\n"]}